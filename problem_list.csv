Problems,Difficulty,Solved,Notes (In Japanese)
"Array, Math, String",,,
Fizz Buzz,Easy,○,有名な問題
Pascal's Triangle,Easy,,
Pascal's Triangle II,Easy,,
Triangle,Medium,,
Rotate Array,Easy,,
Implement strStr(),Easy,,
Factorial Trailing Zeroes,Easy,○,素因数に関しては5に関してのみ調べれば良く、2について調べる必要はないことに注意。
Excel Sheet Column Number,Easy,,
Move Zeroes,Easy,○,走査用ポインタに加えて、0と交換する為のポインタを作って利用する。
Flipping an Image,Easy,,
Count Primes,Easy,○,エラトステネスの篩で素数リストを作って、その長さを返す。
Shortest Unsorted Continuous Subarray,Easy,,
Robot Return to Origin,Easy,○,countメソッドを使っても良い。
Palindrome Number,Easy,,
Find All Numbers Disappeared in an Array,Easy,○,バケツソートorハッシュテーブルを用いた方法はO(N)だが、余分なメモリを使うのでダメ。
Add Strings,Easy,○,文字列として処理しないと、多倍長整数を扱うPythonやJavaのBigInteger以外ではオーバーフローしてしまうことに注意。
Plus One,Easy,,
Count and Say,Easy,○,ヘルパー関数を作ることによって、やや実装が見やすくなる(気がする)。
Reorder Log Files,Easy,,
Roman to Integer,Easy,○,ハッシュテーブルを作ってやると簡単。
Integer to Roman,Medium,○,ハッシュテーブルを作ってやると簡単。
Merge Sorted Array,Easy,○,nums1とnums2を最後尾から比較しつつ、nums1に逆順で要素を入れていけば良い
Add Binary,Easy,○,再帰で解くと綺麗に書ける。リストのアクセスはO(1)なので計算量はO(N)となる。
Reverse String,Easy,○,reverseメソッドや、リストのスライスの逆順操作を用いても0(1)のin-placeになる。
Reverse Vowels of a String,Easy,○,小文字だけでなく大文字も母音となることに注意。
Reverse Integer,Easy,○,数字の文字列をintでキャストすると接頭の0を消すことができる。また文字列の逆順はスライスで行うのが便利。
Multiply Strings,Medium,,
Super Ugly Number,Medium,,
Remove Duplicates from Sorted Array,Easy,,
Longest Common Prefix,Easy,○,zip関数をアスタリスク付きで上手く使う。
Longest Absolute File Path,Medium,,
Flip Game,Easy,,
Flip Game II,Medium,,
Game of Life,Medium,,
Next Permutation,Medium,○,最悪計算量はO(N)、償却計算量はO(1)となる
Summary Ranges,Medium,,
Product of Array Except Self,Medium,○,前順走査と逆順走査のTwo PassでO(N)で解く。
Maximum Average Subarray I,Easy,○,Sliding Windowで解く。ブルートフォースだとO(NK)になってしまう。
Maximum Average Subarray II,Hard,,
Maximum Product Subarray,Medium,,
Rotate Image,Medium,○,zip関数を使うと簡単。返却値(リストの中身)がタプルとなることに注意。
Spiral Matrix,Medium,○,テンプレなので解き方を覚える。len([])は通るが、len([][0])はアクセスエラーになることに注意。
Spiral Matrix II,Medium,○,上とほぼ同じ問題。テンプレなので解き方を覚える。
Set Matrix Zeroes,Medium,,
Largest Number,Medium,,
ZigZag Conversion,Medium,○,シンプルに走査するだけ。
String to Integer (atoi),Medium,,
Fraction to Recurring Decimal,Medium,,
Encode and Decode Strings,Medium,,
Insert Delete GetRandom O(1),Medium,,
Insert Delete GetRandom O(1) - Duplicates allowed,Hard,,
Find Duplicate File in System,Medium,,
Simplify Path,Medium,,
Wiggle Sort,Medium,○,条件を満たさない箇所を貪欲にスワップしていく事で、自然に題意を満たす列となる。
Wiggle Sort II,Medium,,
Missing Ranges,Medium,,
Merge Intervals,Medium,,
Increasing Triplet Subsequence,Medium,,
Find the Celebrity,Medium,,
Longest Substring with At Least K Repeating Characters,Medium,,
Insert Interval,Hard,,
Longest Consecutive Sequence,Hard,,
First Missing Positive,Hard,,
Text Justification,Hard,,
Shortest Palindrome,Hard,,
Valid Number,Hard,,
Consecutive Numbers Sum,Hard,,
Read N Characters Given Read4,Easy,,
Read N Characters Given Read4 II - Call multiple times,Hard,,
,,,
Trie,,,
Implement Trie (Prefix Tree),Medium,,
Implement Magic Dictionary,Medium,,
Map Sum Pairs,Medium,,
Replace Words,Medium,,
Maximum XOR of Two Numbers in an Array,Medium,,
Top K Frequent Words,Medium,,
Add and Search Word - Data structure design,Medium,,
Word Search,Medium,,
Word Search II,Hard,,
Word Squares,Hard,,
Palindrome Pairs,Hard,,
Design Search Autocomplete System,Hard,,
,,,
LinkedList,,,
Reverse Linked List,Easy,○,繰り返しと再帰の2ver.で解く (どちらも時間計算量はO(N))
Reverse Linked List II,Medium,,
Reverse Nodes in k-Group,Hard,,
Linked List Cycle,Easy,○,ランナーテクニックでフロイドの循環検出法を実装
Linked List Cycle II,Medium,○,実装は簡単。Noneの比較は==ではなくisで行う。
Add Two Numbers,Medium,○,ミュータブル/イミュータブル/参照の代入について理解する
Add Two Numbers II,Medium,,
Remove Linked List Elements,Easy,,
Delete Node in a Linked List,Easy,,
Remove Duplicates from Sorted List,Easy,○,ポインタを付け替えるだけ
Remove Duplicates from Sorted List II,Medium,○,ダミーノードを作って上手く処理する
Remove Nth Node From End of List,Medium,○,参照の代入に気を付ける。n+aのfast/slowランナーを利用。
Copy List with Random Pointer,Medium,○,辞書を使って連結リストを処理
Palindrome Linked List,Easy,,
Intersection of Two Linked Lists,Easy,,
Odd Even Linked List,Medium,,
Reorder List,Medium,○,中央値発見/逆順並び替え/交互にマージの総合問題
Sort List,Medium,,
Swap Nodes in Pairs,Medium,,
Merge Two Sorted Lists,Easy,○,None or TrueはTrueになることに注意する
Merge k Sorted Lists,Hard,○,優先度付きキューを使う総合問題
Design Linked List,Easy,,
Flatten Binary Tree to Linked List,Medium,,
Convert Binary Search Tree to Sorted Doubly Linked List,Medium,,
LRU Cache,Medium,○,双方向連結リスト＋辞書を使う総合問題
LFU Cache,Hard,,
,,,
Stack,,,
Valid Parentheses,Easy,○,辞書を使って解く(括弧の向きが逆になることに注意)
Min Stack,Easy,○,最小値保存用のスタックを別に作成する
Max Stack,Easy,,
Decode String,Medium,,繰り返し回数保存用のスタックを別に作成する
Daily Temperature,Medium,,スタックを用いてforwardのループで上手く処理する
Flatten Nested List Iterator,Medium,,pop()をO(1)で用いるために、最初にリストを逆順にする
Evaluate Reverse Polish Notation,Medium,,
Trapping Rain Water,Hard,,Largest Rectangle in Histogramと似た問題。スタックを上手く使って解く。
Largest Rectangle in Histogram,Hard,,Trapping Rain Waterと似た問題。スタックを上手く使って解く。
Odd Even Jump,Hard,,
Basic Calculator,Hard,,
Basic Calculator II,Medium,,
Basic Calculator III,Hard,,
,,,
Queue,,,
Moving Average from Data Stream,Easy,,
Kill Process,Medium,,
Task Scheduler,Medium,,
Design Circular Queue,Medium,,
Design Circular Deque,Medium,,
Design Snake Game,Medium,,
,,,
"Heap, PriorityQueue",,,
Kth Largest Element in a Stream,Easy,,
K Closest Points to Origin,Medium,○,ヒープを使うと計算量をO(NlogN)からO(K+(N-K)logK)に落とせる。クイックセレクトの利用もあり。
Kth Largest Element in an Array,Medium,○,ヒープを使うと計算量をO(NlogN)からO(K+(N-K)logK)に落とせる。クイックセレクトの利用もあり。
Top K Frequent Elements,Medium,,
Find K Pairs with Smallest Sums,Medium,,
Find Median from Data Stream,Hard,,
,,,
"HashMap, HashTable",,,
Jewels and Stones,Easy,○,ハッシュテーブルを使って普通に解く。
Subdomain Visit Count,Easy,○,ドメイン毎のハッシュテーブルを作って値を管理する。
Happy Number,Easy,○,ハッピー列が最終的に循環列になるという性質を利用する。
Two Sum,Easy,○,ハッシュテーブルを用いてO(N)で処理。_ in dictはvalueではなくkeyを見つける事に注意。
4Sum,Medium,,
4Sum II,Medium,,
Group Shifted Strings,Medium,,
Strobogrammatic Number,Easy,○,ストロボグラマティック数のハッシュテーブルを作って解く。
Strobogrammatic Number II,Medium,,
Strobogrammatic Number III,Hard,,
Intersection of Two Arrays,Easy,,
Intersection of Two Arrays II,Easy,,
H-Index,Medium,,
Valid Anagram,Easy,,
Valid Palindrome,Easy,,
Valid Palindrome II,Easy,,
Unique Word Abbreviation,Medium,,
Unique Email Addresses,Easy,○,ビルトインメソッドのsplitとreplaceを使うと簡単。
First Unique Character in a String,Easy,○,ハッシュマップを使ってTwo Passで解く。
Find All Anagrams in a String,Easy,,
Island Perimeter,Easy,○,True or 配列外のアクセスエラーはTrueとなることを利用。アクセスエラーを防ぐために外周を0埋めしても良い。
Contains Duplicate,Easy,○,ハッシュテーブルを用いて普通に解く。setはO(N)でlenはO(1)となる。
Contains Duplicate II,Easy,○,ハッシュテーブルを用いてO(N)で解く。愚直に解くとO(N^2)となる。
Contains Duplicate III,Medium,,
Palindrome Permutation,Easy,,
Palindrome Permutation II,Medium,,
Group Anagrams,Medium,○,ハッシュテーブルを用いてO(N)で処理。dict.values()はPython3ではイテレータが返ってくることに注意。
Encode and Decode TinyURL,Medium,,
Subarray Sum Equals K,Medium,,
Subarray Sums Divisible by K,Medium,,
Binary Tree Vertical Order Traversal,Medium,,
Integer to English Words,Hard,,
,,,
"Tree, BST",,,
Same Tree,Easy,○,適当な走査法で全探索しつつ２つの木を比較していく。
Symmetric Tree,Easy,,
Merge Two Binary Trees,Easy,○,適当な走査法で全探索しつつ２つの木を足していく。
Subtree of Another Tree,Easy,,
Balanced Binary Tree,Easy,,
Invert Binary Tree,Easy,○,適当な走査法で全探索しつつ左右を反転していく。
Range Sum of BST,Easy,○,適当な走査法で枝狩りしつつ全探索していく。
Binary Tree Paths,Easy,,
Diameter of Binary Tree,Easy,,
Minimum Depth of Binary Tree,Easy,,
Maximum Depth of Binary Tree,Easy,,
Convert BST to Greater Tree,Easy,,
Convert Sorted Array to Binary Search Tree,Easy,○,再帰で解く。計算量はT(n)=2T(n/2)+O(1)より、マスター定理を用いてO(N)となる。
Convert Sorted List to Binary Search Tree,Medium,,
Closest Binary Search Tree Value,Easy,,
Closest Binary Search Tree Value II,Hard,,
Binary Tree Right Side View,Medium,,
Verify Preorder Serialization of a Binary Tree,Medium,,
Path Sum,Easy,,
Path Sum II,Medium,,
Path Sum III,Easy,,
Path Sum IV,Medium,,
House Robber III,Medium,,
Lowest Common Ancestor of a Binary Search Tree,Easy,,
Kth Smallest Element in a BST,Medium,,
Inorder Successor in BST,Medium,,
Binary Search Tree Iterator,Medium,,
Validate Binary Search Tree,Medium,,
Unique Binary Search Trees,Medium,,
Binary Tree Longest Consecutive Sequence,Medium,,
Binary Tree Longest Consecutive Sequence II,Medium,,
Lowest Common Ancestor of a Binary Tree,Medium,,
Binary Tree Inorder Traversal,Medium,,
Binary Tree Preorder Traversal,Medium,,
Binary Tree Postorder Traversal,Hard,,
Binary Tree Level Order Traversal,Medium,,
Binary Tree Level Order Traversal II,Easy,,
Binary Tree Zigzag Level Order Traversal,Medium,,
Construct Binary Tree from Preorder and Inorder Traversal,Medium,,
Construct Binary Tree from Inorder and Postorder Traversal,Medium,,
Construct Binary Tree from Preorder and Postorder Traversal,Medium,,
Construct Binary Search Tree from Preorder Traversal,Medium,,
Construct String from Binary Tree,Easy,,
Construct Binary Tree from String,Medium,,
Minimum Height Trees,Medium,,
Binary Tree Maximum Path Sum,Hard,,
Serialize and Deserialize BST,Medium,,
Serialize and Deserialize Binary Tree,Hard,,
Serialize and Deserialize N-ary Tree,Hard,,
Count of Smaller Numbers After Self,Hard,,
Recover Binary Search Tree,Hard,,
Populating Next Right Pointers in Each Node,Medium,,
Populating Next Right Pointers in Each Node II,Medium,,
Count of Range Sum,Hard,,
,,,
"Graph, BFS, DFS",,,
Flood Fill,Easy,,
Nested List Weight Sum,Easy,,
Nested List Weight Sum II,Medium,,
Clone Graph,Medium,,
Graph Valid Tree,Medium,,
Is Graph Bipartite?,Medium,,
Network Delay Time,Medium,,
Friend Circles,Medium,,
Accounts Merge,Medium,,
Most Stones Removed with Same Row or Column,Medium,,
Number of Connected Components in an Undirected Graph,Medium,,
Course Schedule,Medium,,
Course Schedule II,Medium,,
Course Schedule III,Medium,,
Number of Islands,Medium,○,DFSかBFSか、適当な走査法でgridの各点毎に探索する。計算量はO(面積)となる。
Number of Islands II,Hard,,
Max Area of Island,Medium,,
Evaluate Division,Medium,,
Word Ladder,Medium,,
Word Ladder II,Hard,,
Walls and Gates,Medium,,
Surrounded Regions,Medium,,
Pacific Atlantic Water Flow,Medium,,
Reconstruct Itinerary,Medium,,
Minesweeper,Hard,,
Alien Dictionary,Hard,,
Remove Invalid Parentheses,Hard,,
Minimize Malware Spread,Hard,,
Shortest Distance from All Buildings,Hard,,
Longest Increasing Path in a Matrix,Hard,,
Sliding Puzzle,Hard,,
Robot Room Cleaner,Hard,,
,,,
Dynamic Programming,,,
Climbing Stairs,Easy,○,フィボナッチ数列の計算と同値となる。
Min Cost Climbing Stairs,Easy,,
Paint Fence,Easy,,
Longest Increasing Subsequence,Medium,,
Longest Palindromic Subsequence,Medium,,
Longest Palindromic Substring,Medium,,
Palindromic Substrings,Medium,,
Maximum Subarray,Easy,○,全探索:O(N^3)、全探索＋累積和:O(N^2)、分割統治法:O(NlogN)、Kadane's Algorithm:O(N)の四通りの解き方がある。
Unique Paths,Medium,,
Unique Paths II,Medium,,
House Robber,Easy,○,i番目の家で強盗した/しなかった場合の最大獲得金額を記録しながら走査する。
House Robber II,Medium,,
Target Sum,Medium,,
Best Time to Buy and Sell Stock,Easy,,
Best Time to Buy and Sell Stock II,Easy,,
Best Time to Buy and Sell Stock III,Hard,,
Best Time to Buy and Sell Stock IV,Hard,,
Best Time to Buy and Sell Stock with Cooldown,Medium,,
Range Sum Query - Immutable,Easy,,
Range Sum Query - Mutable,Medium,,
Range Sum Query 2D - Immutable,Medium,,
Range Sum Query 2D - Mutable,Hard,,
Partition Equal Subset Sum,Medium,,
Decode Ways,Medium,,
Delete Operation for Two Strings,Medium,,
Perfect Squares,Medium,,
Maximal Square,Medium,,
Word Break,Medium,,
Word Break II,Hard,,
Coin Change,Medium,○,DPでシンプルに解く。日本の硬貨に限定すると、値段の高いものから貪欲に順に多く取っていけば最適解となる。
Coin Change 2,Medium,,
Minimum Path Sum,Medium,,
Regular Expression Matching,Hard,,
Edit Distance,Hard,,
Maximal Rectangle,Hard,,
Burst Balloons,Hard,,
Longest Valid Parentheses,Hard,,
Wildcard Matching,Hard,,
Frog Jump,Hard,,
Distinct Subsequences,Hard,,
Split Array Largest Sum,Hard,,
Create Maximum Number,Hard,,
Cherry Pickup,Hard,,
,,,
Binary Search,,,
Sqrt(x),Easy,○,二分探索で求める。ニュートン法でも求まるが、今回のテストケースの場合あまり速くならない。
Search Insert Position,Easy,,
Two Sum II - Input array is sorted,Easy,,
Is Subsequence,Medium,,
Find Peak Element,Medium,,
Find Minimum in Rotated Sorted Array,Medium,,
Find Minimum in Rotated Sorted Array II,Hard,,
Find First and Last Position of Element in Sorted Array,Medium,,
Search in Rotated Sorted Array,Medium,,
Search in Rotated Sorted Array II,Medium,,
Capacity To Ship Packages Within D Days,Medium,,
Divide Two Integers,Medium,,
Search a 2D Matrix,Medium,,
Search a 2D Matrix II,Medium,,
Kth Smallest Element in a Sorted Matrix,Medium,,
Time Based Key-Value Store,Medium,,
Random Pick with Weight,Medium,,
Smallest Rectangle Enclosing Black Pixels,Hard,,
Median of Two Sorted Arrays,Hard,○,jをiで上手く固定した後、B[j-1]<=A[i]かつA[i-1]<=B[j]を満たすiを二分探索で求める。
,,,
Recursion,,,
Longest Univalue Path,Easy,,
Minimum Distance Between BST Nodes,Easy,,
"Pow(x, n)",Medium,○,繰り返し二乗法を用いてO(logN)に落とす
K-th Symbol in Grammar,Medium,,
Partition to K Equal Sum Subsets,Medium,,
Split BST,Medium,,
,,,
Bit Manipulation,,,
Power of Two,Easy,,
Power of Three,Easy,,
Power of Four,Easy,,
Single Number,Easy,,
Single Number II,Medium,,
Single Number III,Medium,,
Hamming Distance,Easy,,
Total Hamming Distance,Medium,,
Sum of Two Integers,Easy,,
Majority Element,Easy,,
Missing Number,Easy,,
Reverse Bits,Easy,,
Number of 1 Bits,Easy,,
Counting Bits,Medium,,
UTF-8 Validation,Medium,,
Maximum Product of Word Lengths,Medium,,
,,,
"Two Pointers, Sliding Window",,,
Longest Repeating Character Replacement,Medium,○,尺取り法(Two Pointers/Sliding Window)を用いてO(N)で処理
Longest Substring Without Repeating Characters,Medium,○,尺取り法を用いてO(N)で処理
Minimum Size Subarray Sum,Medium,○,尺取り法を用いてO(N)で処理。累積和＋二分探索を用いてO(NlogN)に処理する方法もある
Permutation in String,Medium,,
Max Consecutive Ones III,Medium,,
Container With Most Water,Medium,○,尺取り法を用いてO(N)で処理。横幅が大きい面積から処理していく。
Sort Colors,Medium,,
Interval List Intersections,Medium,,
3Sum,Medium,,
3Sum Closest,Medium,,
3Sum Smaller,Medium,,
Find the Duplicate Number,Medium,,
Minimum Window Substring,Hard,,
Sliding Window Maximum,Hard,,
Longest Substring with At Most Two Distinct Characters,Hard,,
Longest Substring with At Most K Distinct Characters,Hard,,
,,,
"Greedy",,,
Meeting Rooms,Easy,○,開始時間でソートした後、前順にチェックしていくだけ
Meeting Rooms II,Medium,○,開始時間でソートした後、heapで前順にチェックしていく(O(N)で済む)
Jump Game,Medium,,
Jump Game II,Hard,,
Campus Bikes,Medium,,
Campus Bikes II,Medium,,
String Without AAA or BBB,Medium,,
Partition Labels,Medium,,
Reorganize String,Medium,,
Gas Station,Medium,,
Non-overlapping Intervals,Medium,,
Queue Reconstruction by Height,Medium,○,身長で降順ソート/前方許可人数で昇順ソートした後、前方許可人数に基づいて貪欲に列を構成する。
Remove K Digits,Medium,,
Remove Duplicate Letters,Hard,,
Employee Free Time,Hard,,
Candy,Hard,,
Patching Array,Hard,,
Minimum Number of K Consecutive Bit Flips,Hard,,
,,,
"Backtracking",,,
Permutations,Medium,○,素直にitertoolsを使うのが一番速い。想定解はDFS(バックトラック法)。
Permutations II,Medium,○,itertools/set/sortedで処理しても十分に速い。想定解はDFS(バックトラック法)。
Subsets,Medium,,
Subsets ll,Medium,,
Gray Code,Medium,,
Letter Combinations of a Phone Number,Medium,,
Generate Parentheses,Medium,,
Palindrome Partitioning,Medium,,
Palindrome Partitioning II,Hard,,
Restore IP Addresses,Medium,,
N-Queens,Hard,,
N-Queens II,Hard,,
Valid Sudoku,Medium,,
Sudoku Solver,Hard,,
Generalized Abbreviation,Medium,,
Combinations,Medium,,
Combination Sum,Medium,,
Combination Sum II,Medium,,
Combination Sum III,Medium,,
Combination Sum IV,Medium,,
,,,
Others,,,
Flatten 2D Vector,Medium,,
Peeking Iterator,Medium,,
Zigzag Iterator,Medium,,
Expression Add Operators,Hard,,
All O`one Data Structure,Hard,,
Shuffle an Array,Medium,,
Beautiful Array,Medium,,
Design Tic-Tac-Toe,Medium,,
The Skyline Problem,Hard,,
Guess the Word,Hard,,
Max Points on a Line,Hard,,
Combine Two Tables,Easy,,
Valid Phone Numbers,Easy,,
